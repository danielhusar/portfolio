#carousel{
	position: absolute;
	display: block;
	z-index: 5;
	top: -900px;
	margin-left: -350px;
	min-height: 900px;
	ul{
	  list-style: none;
	  position: absolute;
	  top: 0;
	  left: 0;
	  margin: 0;
	  padding: 0;
	  .transition(margin 500ms ease);
	  li{
	    float: left;
	    text-align: center;
	    width: 700px;
	    margin: 0;
	    padding: 0;
			text-align: center;
			a{
				/*padding: 20px 20px 40px 20px;*/
				display: inline-block;
				position: relative;
				background: #fafafa;
				.box-shadow(0 1px 4px rgba(0, 0, 0, 0.3), 0 0 40px rgba(128, 128, 128, 0.1) inset);
				img{
					width: 600px;
				}
			}

		}
	}
}



/*
@iterations: 30;

// helper class, will never show up in resulting css
// will be called as long the index is above 0
.loopingClass (@index) when (@index > 0) {

	// create the actual css selector, example will result in
	// .myclass_30, .myclass_28, .... , .myclass_1
	.myclass_@{index}{
		// your resulting css
		my-property: -@index px;
		color: randomcolor();
	}

	// next iteration
	.loopingClass(@index - 1);
}

// "call" the loopingClass the first time with highest value
.loopingClass (@iterations);
*/